<?php
 
namespace Twin\Url\Observer\Product;
 
use Magento\Framework\Event\Observer;
use Magento\UrlRewrite\Model\UrlRewriteFactory;
use Magento\Framework\View\Element\Template\Context;
use Magento\Framework\Event\ObserverInterface;
 
class Data implements ObserverInterface
{
    /**
     * Below is the method that will fire whenever the event runs!
     *
     * @param Observer $observer
     */
    protected $urlRewriteFactory;
    protected $storeManager;
    
    public function __construct(
        Context $context,
        \Magento\UrlRewrite\Model\UrlRewriteFactory $urlRewriteFactory,
        \Magento\Framework\App\RequestInterface $request,
        array $data = []
    ) {
        $this->_urlRewriteFactory = $urlRewriteFactory;
        $this->_request = $request;
    }
    public function execute(Observer $observer)
    {
        $product = $observer->getProduct();
        $producturl = $product->getProductUrl();
        $twinurl = $product->getTwinUrl();
        $id = $product->getEntityId();
        $data = [
            'entity_type' => 'product',
            'entity_id'   => $product->getEntityId(),
            'request_path'=> $twinurl,
            'target_path' => 'catalog/product/view/id/'.$id,
            'redirect_type'=> 0,
            'store_id'=> 1,
            'description' => null,
            'is_autogenerated' => 0,
            'metadata' => null
        ];
        $model = $this->_urlRewriteFactory->create();
        $modeldata = $model->getCollection()
        ->addFieldToFilter('target_path', ['eq'=>'catalog/product/view/id/'.
            $id])->addFieldToFilter('is_autogenerated', 0)->getLastItem();

        if (!$twinurl) {
            if ($modeldata->getId()) {
                $modeldata -> delete();
            }
            
        } else {
            if (!$modeldata->getId()) {
                $model->setData($data);
                $model->save();
            } else {
                if ($modeldata->getRequestPath() != $twinurl) {
                    $modeldata->delete();
                    $model->setData($data);
                    $model->save();
                }
            }
        }
    }
}
